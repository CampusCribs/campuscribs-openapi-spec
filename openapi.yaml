openapi: 3.1.1
info:
  version: 1.0.0
  title: CampusCribs
  description: CampusCribs API Implementation Specification
paths:
  /users/me:
    get:
      tags:
        - User
      summary: Get current user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /public/tags:
    get:
      tags:
        - Tag
      summary: Get all tags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    tagCategoryId:
                      type: string
  /public/crib/{postId}:
    get:
      summary: Get a public post by ID
      tags:
        - Public Posts
      parameters:
        - name: postId
          in: path
          required: true
          description: The ID of the post to retrieve
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful retrieval of the post
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  firstName:
                    type: string
                  lastName:
                    type: string
                  username:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                  roommates:
                    type: integer
                  mediaIds:
                    type: array
                    items:
                      type: string
                      format: uuid
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                  termStartDate:
                    type: string
                    format: date-time
                  termEndDate:
                    type: string
                    format: date-time
  /public/curated:
    get:
      tags:
        - Curated
      summary: Get curated items
      parameters:
        - in: query
          name: tag
          description: Filter by tags
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true

        # Spring Pageable parameters
        - in: query
          name: page
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
        - in: query
          name: sort
          description: Sort by field (e.g. `price,asc` or `mediaId,desc`)
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        mediaId:
                          type: string
                        price:
                          type: number
                  pageable:
                    type: object
                  totalPages:
                    type: integer
                  totalElements:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer
                  sort:
                    type: object
                  first:
                    type: boolean
                  last:
                    type: boolean
                  numberOfElements:
                    type: integer
                  empty:
                    type: boolean

  /public/search:
    get:
      summary: Search for posts and users
      parameters:
        - in: query
          name: query
          required: true
          description: Search term
          schema:
            type: string
      responses:
        "200":
          description: Successful search
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        thumbnail:
                          type: string
                          nullable: true
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                        thumbnail:
                          type: string
                          nullable: true
components:
  schemas:
    UserAnonymous:
      type: object
      required:
        - id
        - firstName
        - lastName
        - username
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        bio:
          type: string
        thumbnailMediaId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
    User:
      type: object
      required:
        - id
        - firstName
        - lastName
        - username
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        bio:
          type: string
        thumbnailMediaId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        email:
          type: string
          format: email
        phone:
          type: string
  parameters:
    limit:
      description: The limit of a paginated request
      in: query
      name: limit
      required: true
      schema:
        type: number
    page:
      description: The page of a paginated request
      in: query
      name: page
      required: false
      schema:
        type: number
